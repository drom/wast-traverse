'use strict';

module.exports = {
    assert_invalid: [ 'module', 'failure' ],
    assert_return_nan: [ 'invoke' ],
    assert_return: [ 'invoke', 'expr' ],
    assert_trap: [ 'invoke', 'failure' ],
    binop: [ 'left', 'right' ],
    block: [ 'id', 'body' ],
    break: [ 'id', 'expr' ],
    call_import: [ 'id', 'expr' ],
    call: [ 'id', 'expr' ],
    case: [ 'body' ],
    cvtop: [ 'expr' ],
    func: [ 'params', 'result', 'body' ],
    get_local: [ 'id' ],
    grow_memory: [ 'expression' ],
    if: [ 'test', 'consequent', 'alternate' ],
    invoke: [ 'body' ],
    label: [ 'body', 'id' ],
    load: [ 'expr' ],
    loop: [ 'body', 'extra' ],
    memory: [ 'segment' ],
    module: [ 'body' ],
    relop: [ 'left', 'right' ],
    return: [ 'expr' ],
    script: [ 'body' ],
    set_local: [ 'id', 'init' ],
    store: [ 'addr', 'data' ],
    switch: [ 'before', 'body', 'after', 'after' ],
    unop: [ 'expr' ]
};
